
# materi, setup editor ATOM
download git dan install dulu,
download dan install atom editor
donwload dan install Go, PROGRAM
atom : tekan ctrl + , untuk install paket go-plus, platformio-ide-terminal, git clone, git plus, go plus, terminal

go env : yang perlu di perhatikan adalah bagian dari GOPATH dan GOROOT(SDK)
GOPATH: tempat penyimpanan proyek/kerjaan kamu
GOROOT: goolang source codes

cara setnya

vim ~/.bash_profile

# for GO programing
export GOROOT="/usr/local/go"
export GOPATH="$HOME/Documents/go"
export PATH= "$HOME/Documents/go/bin:$PATH"

#materi, hello word
1. hello word, 1.go

package main
// Setiap file pergi dimulai dengan nama paket. Nama paketnya harus sama dengan nama folder
// kecuali package main , package main adalah entry point untuk program anda.

import "fmt"
// Jika Anda menggunakan kode dari paket lain, Anda akan mencantumkan paket yang ingin Anda impor.
// Ini memungkinkan Anda untuk menggunakan kode dalam program Anda yang telah ditulis orang lain. Paket juga kadang disebut sebagai library.

// Paket "fmt" sedang diimpor.


func main()  {
    fmt.Println("Hello World!")
  }
// Kode dari paket "fmt" sedang digunakan .Println adalah fungsi yang dideklarasikan dalam paket "fmt".
// Agar fungsinya dapat diakses ke paket lain, maka harus diberi KAPITALISASI. Ini sama dengan "publik" dalam bahasa lain.

// Func main () adalah entry point untuk program anda; Kode pertama yang akan dijalankan Paket utama juga bisa memiliki fungsi lain selain func main ().

// Ekspresi menentukan perhitungan nilai dengan menerapkan operator dan fungsi ke operan.

// "Hello World!", Parameter adalah variabel yang merupakan bagian dari tanda tangan func (func declaration).
// Argumen adalah ungkapan yang digunakan saat memanggil func. Sumber: dimodifikasi dari stackoverflow


2. klik dibagian bawah ada terminal/konsole dari plugin atom yang kita install, lalu  ketik

C:\Users\adpit\github> go run .\1.go
Hello World

3. sedangkan perintah "go build" untuk membuat file 1.go menjadi binarry, ini yang dinamakan atas folder utama dimana skrip berada
compile pada unix,  dengan perintah "go install" setelah itu masukan hasil complinya ke /bin, sehingga aplikasi bisa langsung di pangil "hello"

#materi, go get

buat gitbaru dan clone ke pc
https://github.com/new
	Repository name: latihangolang
	Public
	Initialize this repository with a README
	add .gitignore:Go
create repository

pada repository baru klik tombol download/clone nanti dapat url seperti ini:
(ssh)git@github.com:adpit/latihangolang.git # gak bisa masalah restric ganti jadi
(https)https://github.com/adpit/latihangolang.git

lihat ini untuk clone pada atom editor: ctrl+shift+p
file:///C:/Users/adpit/Desktop/data/atom-x64-windows/2.gif

pada editor atom tekan : ctrl+shift+p
lalu ketik 			   : git clone
masukan urlnya		   : https://github.com/adpit/latihangolang

hasilnya terbentuk project yang di clone, untuk diperhatikan sebuah file dengan nama .gitignore

.gitignore  adalah file untuk projecy go, karena tadi kita pilih go diatas. file ini .gitignore memberitahukan pada git / github tidak metrack file yang ada dalam list

cara commit mengunakan editor atom sebelumnya tambahkan/install dulu package git-plus jika belum ada
file:///C:/Users/adpit/Desktop/data/atom-x64-windows/3.gif

lalu ketik -> cmd
git config --global user.name "arieibra rumah"
git config --global user.email adpit31@gmail.com

tambahan untuk linux setting github : Permanently authenticating with Git repositories,

Run following command to enable credential caching.

$ git config credential.helper store
$ git push https://github.com/repo.git

Username for 'https://github.com': <USERNAME>
Password for 'https://USERNAME@github.com': <PASSWORD>
Use should also specify caching expire,

git config --global credential.helper 'cache --timeout 7200'
After enabling credential caching, it will be cached for 7200 seconds (2 hour).
ref: https://stackoverflow.com/questions/8588768/git-push-username-password-how-to-avoid

coba edit sebuah file pada project yang kita clone tadi lalu simpan(ini penting!), ctrl + shift + p "add plus".
tekan ctrl+shift+p "commit plus", tulisakan keterangan updatenya., jangan lupa ctrl+s untuk simpan
tekan ctrl+shift+p "push plus", jika step ini berhasil cek pada
https://github.com/adpit/latihangolang/commits/master
(bisa juga commit pada window git+ pada terminal atom)

jadi caranya untuk edit dan simpan ke github adalah
1.editfile(simpan)
2.git add coba ganti dengan git writem, git add jika file baru dibuat 
3.git commit(beri penjelasan simpan)
4.git push (nanti dimita user dan password jika belum)

add paket pada atom editor, git clone
file:///C:/Users/adpit/Desktop/data/atom-x64-windows/add-paket-atom.gif

# REVIEW
git log -> pada terminal atom untuk melihat log dari commit yang kita kirim ke github
go get -> sama seperti clone git clone repository ke komputer kita (error belm tau kenapa di windows)
godoc.org gudang package contoh : https://godoc.org/fmt

# materi, Packages && Docs
Packages dapat diibaratkan seperti folder, yang berisikan lebih banyak folder dan file-file dalamnya
Packages penamaan dari namanya unik dan berada didalam folder GOSDK/src/
